apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"tekton.dev/v1beta1","kind":"Task","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"globex-ui-pipeline-local-cluster"},"name":"acs-image-check","namespace":"ci"},"spec":{"description":"Policy check an image with StackRox/RHACS This tasks allows you to check an image against build-time policies and apply enforcement to fail builds. It's a companion to the stackrox-image-scan task, which returns full vulnerability scan results for an image.","params":[{"description":"Secret containing the address:port tuple for StackRox Central)\n(example - rox.stackrox.io:443)\n","name":"rox_central_endpoint","type":"string"},{"description":"Secret containing the StackRox API token with CI permissions","name":"rox_api_token","type":"string"},{"description":"Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)\n","name":"image","type":"string"},{"default":"false","description":"When set to `\"true\"`, skip verifying the TLS certs of the Central\nendpoint.  Defaults to `\"false\"`.\n","name":"insecure-skip-tls-verify","type":"string"}],"results":[{"description":"Output of `roxctl image check`","name":"check_output"}],"steps":[{"env":[{"name":"ROX_API_TOKEN","valueFrom":{"secretKeyRef":{"key":"rox_api_token","name":"$(params.rox_api_token)"}}},{"name":"ROX_CENTRAL_ENDPOINT","valueFrom":{"secretKeyRef":{"key":"rox_central_endpoint","name":"$(params.rox_central_endpoint)"}}}],"image":"registry.access.redhat.com/ubi8/ubi-minimal","name":"rox-image-check","script":"#!/usr/bin/env bash\nset +x\ncurl -s -k -L -H \"Authorization: Bearer $ROX_API_TOKEN\" \\\n  \"https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux\" \\\n  --output ./roxctl  \\\n  \u003e /dev/null\nchmod +x ./roxctl  \u003e /dev/null\n./roxctl image check \\\n  $( [ \"$(params.insecure-skip-tls-verify)\" = \"true\" ] \u0026\u0026 \\\n  echo -n \"--insecure-skip-tls-verify\") \\\n  -e \"$ROX_CENTRAL_ENDPOINT\" --image \"$(params.image)\"\n"}]}}
  creationTimestamp: "2023-10-17T08:38:37Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: globex-ui-pipeline-local-cluster
  name: acs-image-check
  namespace: ci
  resourceVersion: "1406936"
  uid: b18f9cd0-471c-4ad6-8722-e5c67dea6214
spec:
  description: Policy check an image with StackRox/RHACS This tasks allows you to
    check an image against build-time policies and apply enforcement to fail builds.
    It's a companion to the stackrox-image-scan task, which returns full vulnerability
    scan results for an image.
  params:
  - description: |
      Secret containing the address:port tuple for StackRox Central)
      (example - rox.stackrox.io:443)
    name: rox_central_endpoint
    type: string
  - description: Secret containing the StackRox API token with CI permissions
    name: rox_api_token
    type: string
  - description: |
      Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)
    name: image
    type: string
  - default: "false"
    description: |
      When set to `"true"`, skip verifying the TLS certs of the Central
      endpoint.  Defaults to `"false"`.
    name: insecure-skip-tls-verify
    type: string
  results:
  - description: Output of `roxctl image check`
    name: check_output
    type: string
  steps:
  - env:
    - name: ROX_API_TOKEN
      valueFrom:
        secretKeyRef:
          key: rox_api_token
          name: $(params.rox_api_token)
    - name: ROX_CENTRAL_ENDPOINT
      valueFrom:
        secretKeyRef:
          key: rox_central_endpoint
          name: $(params.rox_central_endpoint)
    image: registry.access.redhat.com/ubi8/ubi-minimal
    name: rox-image-check
    resources: {}
    script: |
      #!/usr/bin/env bash
      set +x
      curl -s -k -L -H "Authorization: Bearer $ROX_API_TOKEN" \
        "https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux" \
        --output ./roxctl  \
        > /dev/null
      chmod +x ./roxctl  > /dev/null
      ./roxctl image check \
        $( [ "$(params.insecure-skip-tls-verify)" = "true" ] && \
        echo -n "--insecure-skip-tls-verify") \
        -e "$ROX_CENTRAL_ENDPOINT" --image "$(params.image)"
