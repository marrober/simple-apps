apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-image-to-ocp
spec:
  params:
    - name: imagestream-url
      type: string
    - name: STORAGE_DRIVER
      type: string
    - name: TLSVERIFY
      type: string
    - name: pipelineRunName
      type: string
  results:
    - name: new-tag
    - name: new-image-repo-location
  stepTemplate:
    env:
      - name: "HOME"
        value: "/tekton/home"
  steps:
    - name: push-to-imagestream
      script: >-
        #!/usr/bin/env bash

        set +x

        var1=$(params.pipelineRunName)

        echo $var1

        var2=${var1:(${#var1} - 5):${#var1}}

        tag=$var2

        echo $tag

        echo -n $tag >  $(results.new-tag.path)

        buildah push --storage-driver=$(params.STORAGE_DRIVER) \

        --tls-verify=$(params.TLSVERIFY) --root /files/buildah-containers \

        localhost/my-container-image:latest \

        docker://$(params.imagestream-url):$tag

      image: registry.redhat.io/rhel8/buildah   
      securityContext:
        capabilities:
          add: ["SETFCAP"]
    - name: get-image-repository-url
      command:
        - /bin/sh
        - '-c'
      args:
        - |-
          export TAG=$(cat $(results.new-tag.path))

          echo $TAG

          oc project $(params.openshift_app_name)
          oc get is/$(params.runtime_image_name) -o jsonpath='{.status.publicDockerImageRepository}{":"}'$TAG > $(results.new-image-repo-location.path)

          echo -------------------------------------
          cat $(results.new-image-repo-location.path)

      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      securityContext:
        capabilities:
          add: ["SETFCAP"]
  workspaces:
  - mountPath: /files
    name: files