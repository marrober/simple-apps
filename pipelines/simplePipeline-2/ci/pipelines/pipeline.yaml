apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: simple-pipeline-2
spec:
  params:
      # Buildah step configuration parameters - storage driver and TLS settings.
      #
    - name: STORAGE_DRIVER
      type: string
      default: vfs
    - name: TLSVERIFY
      type: string
      default: 'false'
      #
      # Git repository parameters
      #
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: app-dir
      type: string
      #
      # OpenShift imagestream URL parameters
      #
    - name: imagestream-url
      type: string
    - name: openshift_app_name
      type: string
    - name: runtime_image_name
      type: string
      # 
      # Update and commit Kustomize file 
      # 
    - name: repo_type
      type: string
    - name: myapp-cd-git-url
      type: string
    - name: my-app-cd-git-repo-name
      type: string
    - name: my-app-cd-git-repo-path-to-content-development
      type: string
    - name: my-app-cd-git-user-name
      type: string
    - name: my-app-cd-git-user-email
      type: string
    - name: my-app-cd-git-commit-comment-dev
      type: string
  tasks:
##------------------------------------------------------------------
# Git clone resources task
##------------------------------------------------------------------
    - name: git-clone-resources
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-revision)
      - name: verbose
        value: 'false'
      - name: deleteExisting
        value: 'true'
      taskRef:
        kind: ClusterTask
        name:  git-clone
      workspaces:
      - name: output
        workspace: resources
##------------------------------------------------------------------
# Build the container
##------------------------------------------------------------------
    - name: build
      params:
        - name: TLSVERIFY
          value: "$(params.TLSVERIFY)"
        - name: STORAGE_DRIVER
          value: $(params.STORAGE_DRIVER)
        - name: app-dir
          value: $(params.app-dir)
      taskRef:
        kind: Task
        name: build
      runAfter:
      - git-clone-resources
      workspaces:
      - name: files
        workspace: files
      - name: resources
        workspace: resources
#------------------------------------------------------------------
# Push the new runtime image to OpenShift imagestream
#------------------------------------------------------------------
    - name: push-image-to-imagestream
      params:
      - name: imagestream-url
        value: $(params.imagestream-url)
      - name: STORAGE_DRIVER
        value: $(params.STORAGE_DRIVER)
      - name: TLSVERIFY
        value: "$(params.TLSVERIFY)"
      - name: pipelineRunName
        value: $(context.pipelineRun.name)
      - name: openshift_app_name
        value: $(params.openshift_app_name)
      - name: runtime_image_name
        value: $(params.runtime_image_name)
      taskRef:
        kind: Task
        name: push-image-to-ocp
      runAfter:
        - build
      workspaces:
      - name: files
        workspace: files
##------------------------------------------------------------------
# Clone the cd repository and update the kustomization file for the
# development environment to refer to the new tagged image.
##------------------------------------------------------------------
    - name: update-and-commit-kustomization-file-dev
      params:
      - name: GIT_URL
        value: $(params.repo_type)/$(params.myapp-cd-git-url)
      - name: GIT_REPO_NAME
        value: $(params.my-app-cd-git-repo-name)
      - name: GIT_BRANCH
        value: "main"
      - name: GIT_PATH_TO_CONTENT
        value: $(params.my-app-cd-git-repo-path-to-content-development)
      - name: GIT_USER_NAME
        value: $(params.my-app-cd-git-user-name)
      - name: GIT_USER_EMAIL
        value: $(params.my-app-cd-git-user-email)
      - name: GIT_COMMIT_COMMENT
        value: $(params.my-app-cd-git-commit-comment-dev)
      - name: IMAGE
        value: $(tasks.push-image-to-imagestream.results.new-image-repo-location)
      - name: LOCATION
        value: "dev"
      taskRef:
        kind: Task
        name: update-and-commit-kustomization-file
      runAfter:
        - push-image-to-imagestream
      workspaces:
      - name: files
        workspace: files
##------------------------------------------------------------------
# Workspace definitions
##------------------------------------------------------------------
  workspaces:
    - name: resources
    - name: files
